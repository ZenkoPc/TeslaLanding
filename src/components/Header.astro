---

---

<header id="landing-header" class="flex text-white z-40 justify-between py-3 px-10 items-center fixed top-0 w-full">
    <div class="flex flex-grow basis-0">
        <a href="/">
            <svg class="h-6 w-32 transition-all duration-300 tds-icon tds-icon-logo-wordmark tds-site-logo-icon" viewBox="0 0 342 35" xmlns="http://www.w3.org/2000/svg"><path d="M0 .1a9.7 9.7 0 0 0 7 7h11l.5.1v27.6h6.8V7.3L26 7h11a9.8 9.8 0 0 0 7-7H0zm238.6 0h-6.8v34.8H263a9.7 9.7 0 0 0 6-6.8h-30.3V0zm-52.3 6.8c3.6-1 6.6-3.8 7.4-6.9l-38.1.1v20.6h31.1v7.2h-24.4a13.6 13.6 0 0 0-8.7 7h39.9v-21h-31.2v-7h24zm116.2 28h6.7v-14h24.6v14h6.7v-21h-38zM85.3 7h26a9.6 9.6 0 0 0 7.1-7H78.3a9.6 9.6 0 0 0 7 7zm0 13.8h26a9.6 9.6 0 0 0 7.1-7H78.3a9.6 9.6 0 0 0 7 7zm0 14.1h26a9.6 9.6 0 0 0 7.1-7H78.3a9.6 9.6 0 0 0 7 7zM308.5 7h26a9.6 9.6 0 0 0 7-7h-40a9.6 9.6 0 0 0 7 7z" fill="currentColor"></path></svg>
        </a>
    </div>
    <nav>
        <ul class="flex [&>li>a]:transition-all [&>li>a]:duration-300 text-sm [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-1">
            <li>
                <a href="/#Hero">
                    Model S
                </a>
            </li>
            <li>
                <a href="/#Model3">
                    Model 3
                </a>
            </li>
            <li>
                <a href="/#ModelX">
                    Model X
                </a>
            </li>
            <li>
                <a href="/#ModelY">
                    Model Y
                </a>
            </li>
            <li>
                <a href="/#Powerwall">
                    Powerwall
                </a>
            </li>
            <li>
                <a href="/#Charge">
                    Carga
                </a>
            </li>
        </ul>
    </nav>
    <nav class="flex flex-grow justify-end basis-0">
        <ul class="flex [&>li>a]:transition-all [&>li>a]:duration-300 text-sm [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-1">
            <li>
                <a href="/">
                    Soporte
                </a>
            </li>
            <li>
                <a href="/">
                    Tienda
                </a>
            </li>
            <li>
                <a href="/">
                    Cuenta
                </a>
            </li>
            <li>
                <a href="/">
                    Menu
                </a>
            </li>
        </ul>
    </nav>
    <div id="menu-backdrop" class={`absolute -z-10 opacity-0 bg-black/5 backdrop-blur-lg rounded left-[var(--left)] top-[var(--top)] w-[var(--width)] h-[var(--height)] transition-all duration-300 ease-in-out`}>

    </div>
</header>

<script>
    const listItem = document.querySelectorAll('#landing-header li')
    const menuDrop = document.querySelector('#menu-backdrop') as HTMLElement

    listItem?.forEach((item) => {
        item.addEventListener("mouseenter", () => {
            const { left, top, width, height } = item.getBoundingClientRect()
            menuDrop.style.setProperty("--left",`${left}px`)
            menuDrop.style.setProperty("--top",`${top}px`)
            menuDrop.style.setProperty("--width",`${width}px`)
            menuDrop.style.setProperty("--height",`${height}px`)
            menuDrop.style.opacity = "1"
            menuDrop.style.visibility = 'visible'
        })

        item.addEventListener("mouseleave", () => {
            menuDrop.style.opacity = "0"
            menuDrop.style.visibility = 'none'
        })
    })
</script>

<script>
    const $header = document.querySelector('#landing-header') as HTMLElement

    const observerOption = {
        root: null,
        rootMargin: '0px',
        threshold: 0.5
    }

    const observer = new IntersectionObserver(entries => {
        entries.forEach(entry => {
            const { isIntersecting } = entry
            if(isIntersecting){
                const color = entry.target.getAttribute('data-header-color')
                $header.style.color = color
                console.log(color) 
            }
        })
    }, observerOption)

    const $sections = document.querySelectorAll('.landing-section')
    $sections.forEach((section) => observer.observe(section))
</script>